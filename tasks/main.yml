---

- name: Test for existing namespace {{ csi_namespace }}
  ansible.builtin.command: kubectl get ns
  register: namespace_test
  changed_when: false

- name: Create namespace {{ csi_namespace }}
  ansible.builtin.command: kubectl create ns {{ csi_namespace }}
  register: ns_result
  failed_when: ns_result.rc > 1
  changed_when: "'AlreadyExists' not in ns_result.stderr"

- name: Check for existing Nebulon secret file
  ansible.builtin.stat:
    path: /tmp/nebulonsecret.yaml
  register: secret_check

- name: Create Nebulon secret file
  ansible.builtin.shell:
    cmd: |
      cat <<EOF | tee /tmp/nebulonsecret.yaml
      apiVersion: v1
      kind: Secret
      metadata:
        name: nebulon-credentials
        namespace: "{{ csi_namespace }}"
      type: Opaque
      stringData:
          api_endpoint: "https://ucapi.nebcloud.nebuloninc.com"
          username: "{{ neb_username }}"
          password: "{{ neb_password }}"
      EOF
  tags: namespace
  when: not secret_check.stat.exists

- name: Apply Nebulon secret file
  ansible.builtin.command: kubectl apply -f /tmp/nebulonsecret.yaml
  register: secret_result
  failed_when: secret_result.rc > 1
  changed_when: "'AlreadyExists' not in secret_result.stderr"
  tags: namespace

- name: Install K8s CRDs for snapshot support
  ansible.builtin.command: "{{ crd_url }}{{ item }}"
  with_items:
    - "client/config/crd/snapshot.storage.k8s.io_volumesnapshotclasses.yaml"
    - "client/config/crd/snapshot.storage.k8s.io_volumesnapshotcontents.yaml"
    - "client/config/crd/snapshot.storage.k8s.io_volumesnapshots.yaml"
    - "deploy/kubernetes/snapshot-controller/rbac-snapshot-controller.yaml"
    - "deploy/kubernetes/snapshot-controller/setup-snapshot-controller.yaml"
  register: crd_result
  failed_when: crd_result.rc > 1
  changed_when: "'AlreadyExists' not in crd_result.stderr"

- name: Add Nebulon Helm repository
  ansible.builtin.command: helm repo add nebulon https://nebulon.github.io/helm-charts
  register: helm_repo_add
  changed_when: "'skipping' not in helm_repo_add.stdout"

- name: Check if Nebulon CSI driver already loaded
  ansible.builtin.command: helm list -n {{ csi_namespace }}
  register: helm
  changed_when: false
  tags: helm

# Install the Nebulon CSI driver without snapshot support enabled
- name: Install Nebulon CSI driver
  ansible.builtin.command:
    cmd: |
      helm install csi-nebulon nebulon/csi-nebulon --create-namespace -n {{ csi_namespace }}
  when: "'nebulon' not in helm.stdout"
